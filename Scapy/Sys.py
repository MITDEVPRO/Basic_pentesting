from scapy.all import IP, ICMP, sr1, ARP, Ether, srp, TCP
import pandas as pd

def os_fingerprint(ip):
    try:
        ip_id = sr1(IP(dst=ip)/ICMP(), timeout=1, verbose=0)
        if ip_id:
            ttl = ip_id.ttl
            if ttl <= 64:
                return "Linux/Unix"
            elif ttl <= 128:
                return "Windows"
            elif ttl <= 255:
                return "Cisco/Router"
    except Exception as e:
        print(f"Error fingerprinting OS for {ip}: {e}")
    return "Unknown"

def scan_network(ip_range):
    try:
        arp_request = ARP(pdst=ip_range)
        broadcast = Ether(dst="ff:ff:ff:ff:ff:ff")
        arp_request_broadcast = broadcast/arp_request
        answered_list = srp(arp_request_broadcast, timeout=1, verbose=0)[0]

        devices = []
        for element in answered_list:
            device = {'ip': element[1].psrc, 'mac': element[1].hwsrc}
            devices.append(device)
        return devices
    except Exception as e:
        print(f"Error scanning network: {e}")
        return []

def scan_ports(ip):
    open_ports = []
    ports = [22, 23, 80, 443, 8080]  # Lista de puertos comunes a escanear
    for port in ports:
        response = sr1(IP(dst=ip)/TCP(dport=port, flags="S"), timeout=1, verbose=0)
        if response and response.haslayer(TCP) and response.getlayer(TCP).flags == 0x12:
            open_ports.append(port)
            sr1(IP(dst=ip)/TCP(dport=port, flags="R"), timeout=1, verbose=0)  # Reset connection
    return open_ports

if __name__ == "__main__":
    ip_range = "192.168.1.1/24"  # Cambia esto a la subred de tu red
    devices = scan_network(ip_range)

    # Lista para almacenar los datos de los dispositivos
    device_list = []

    for device in devices:
        device_info = {'IP': device['ip'], 'MAC': device['mac']}
        os_type = os_fingerprint(device['ip'])
        device_info['OS'] = os_type
        open_ports = scan_ports(device['ip'])
        device_info['Open Ports'] = open_ports
        device_list.append(device_info)

    # Crear un DataFrame con los datos de los dispositivos
    df = pd.DataFrame(device_list)
    
    # Mostrar la tabla en la consola en el formato especificado
    for index, row in df.iterrows():
        print(f"IP: {row['IP']}, MAC: {row['MAC']}")
        print(f"  Sistema operativo: {row['OS']}")
        print(f"  Puertos abiertos: {row['Open Ports']}")

