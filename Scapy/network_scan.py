from scapy.all import ARP, Ether, srp, sr1, TCP, IP

def scan_network(ip_range):
    # Create ARP request
    arp = ARP(pdst=ip_range)
    ether = Ether(dst="ff:ff:ff:ff:ff:ff")
    packet = ether/arp

    # Send packet and receive responses
    result = srp(packet, timeout=3, verbose=0)[0]

    # Parse responses
    devices = []
    for sent, received in result:
        devices.append({'ip': received.psrc, 'mac': received.hwsrc})

    return devices

def scan_ports(ip):
    open_ports = []
    for port in range(1, 1024):
        pkt = sr1(IP(dst=ip)/TCP(dport=port, flags="S"), timeout=1, verbose=0)
        if pkt and pkt.haslayer(TCP) and pkt[TCP].flags == 0x12:
            open_ports.append(port)
            # Send RST to close the connection
            sr1(IP(dst=ip)/TCP(dport=port, flags="R"), timeout=1, verbose=0)
    return open_ports

if __name__ == "__main__":
    ip_range = "192.168.1.1/24"  # Change this to your network's IP range
    devices = scan_network(ip_range)
    print("Dispositivos en la red:")
    for device in devices:
        print(f"IP: {device['ip']}, MAC: {device['mac']}")
        open_ports = scan_ports(device['ip'])
        if open_ports:
            print(f"  Puertos abiertos: {open_ports}")
        else:
            print("  No se encontraron puertos abiertos.")
